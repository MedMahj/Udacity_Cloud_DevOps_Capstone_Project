{
   "AWSTemplateFormatVersion":"2010-09-09",
   "Description":"EKS nodes (AMI family: AmazonLinux2, SSH access: false, private networking: false) [created and managed by eksctl]",
   "Mappings":{
      "ServicePrincipalPartitionMap":{
         "aws":{
            "EC2":"ec2.amazonaws.com",
            "EKS":"eks.amazonaws.com",
            "EKSFargatePods":"eks-fargate-pods.amazonaws.com"
         },
         "aws-cn":{
            "EC2":"ec2.amazonaws.com.cn",
            "EKS":"eks.amazonaws.com",
            "EKSFargatePods":"eks-fargate-pods.amazonaws.com"
         }
      }
   },
   "Resources":{
      "EgressInterCluster":{
         "Type":"AWS::EC2::SecurityGroupEgress",
         "Properties":{
            "Description":"Allow control plane to communicate with worker nodes in group standard-workers (kubelet and workload TCP ports)",
            "DestinationSecurityGroupId":{
               "Ref":"SG"
            },
            "FromPort":1025,
            "GroupId":{
               "Fn::ImportValue":"eksctl-capstonecluster-cluster::SecurityGroup"
            },
            "IpProtocol":"tcp",
            "ToPort":65535
         }
      },
      "EgressInterClusterAPI":{
         "Type":"AWS::EC2::SecurityGroupEgress",
         "Properties":{
            "Description":"Allow control plane to communicate with worker nodes in group standard-workers (workloads using HTTPS port, commonly used with extension API servers)",
            "DestinationSecurityGroupId":{
               "Ref":"SG"
            },
            "FromPort":443,
            "GroupId":{
               "Fn::ImportValue":"eksctl-capstonecluster-cluster::SecurityGroup"
            },
            "IpProtocol":"tcp",
            "ToPort":443
         }
      },
      "IngressInterCluster":{
         "Type":"AWS::EC2::SecurityGroupIngress",
         "Properties":{
            "Description":"Allow worker nodes in group standard-workers to communicate with control plane (kubelet and workload TCP ports)",
            "FromPort":1025,
            "GroupId":{
               "Ref":"SG"
            },
            "IpProtocol":"tcp",
            "SourceSecurityGroupId":{
               "Fn::ImportValue":"eksctl-capstonecluster-cluster::SecurityGroup"
            },
            "ToPort":65535
         }
      },
      "IngressInterClusterAPI":{
         "Type":"AWS::EC2::SecurityGroupIngress",
         "Properties":{
            "Description":"Allow worker nodes in group standard-workers to communicate with control plane (workloads using HTTPS port, commonly used with extension API servers)",
            "FromPort":443,
            "GroupId":{
               "Ref":"SG"
            },
            "IpProtocol":"tcp",
            "SourceSecurityGroupId":{
               "Fn::ImportValue":"eksctl-capstonecluster-cluster::SecurityGroup"
            },
            "ToPort":443
         }
      },
      "IngressInterClusterCP":{
         "Type":"AWS::EC2::SecurityGroupIngress",
         "Properties":{
            "Description":"Allow control plane to receive API requests from worker nodes in group standard-workers",
            "FromPort":443,
            "GroupId":{
               "Fn::ImportValue":"eksctl-capstonecluster-cluster::SecurityGroup"
            },
            "IpProtocol":"tcp",
            "SourceSecurityGroupId":{
               "Ref":"SG"
            },
            "ToPort":443
         }
      },
      "NodeGroup":{
         "Type":"AWS::AutoScaling::AutoScalingGroup",
         "Properties":{
            "DesiredCapacity":"2",
            "LaunchTemplate":{
               "LaunchTemplateName":{
                  "Fn::Sub":"${AWS::StackName}"
               },
               "Version":{
                  "Fn::GetAtt":"NodeGroupLaunchTemplate.LatestVersionNumber"
               }
            },
            "MaxSize":"3",
            "MinSize":"1",
            "Tags":[
               {
                  "Key":"Name",
                  "PropagateAtLaunch":"true",
                  "Value":"capstonecluster-standard-workers-Node"
               },
               {
                  "Key":"kubernetes.io/cluster/capstonecluster",
                  "PropagateAtLaunch":"true",
                  "Value":"owned"
               }
            ],
            "VPCZoneIdentifier":{
               "Fn::Split":[
                  ",",
                  {
                     "Fn::ImportValue":"eksctl-capstonecluster-cluster::SubnetsPublic"
                  }
               ]
            }
         },
         "UpdatePolicy":{
            "AutoScalingRollingUpdate":{
               "MaxBatchSize":"1",
               "MinInstancesInService":"0"
            }
         }
      },
      "NodeGroupLaunchTemplate":{
         "Type":"AWS::EC2::LaunchTemplate",
         "Properties":{
            "LaunchTemplateData":{
               "IamInstanceProfile":{
                  "Arn":{
                     "Fn::GetAtt":"NodeInstanceProfile.Arn"
                  }
               },
               "ImageId":"ami-0809659d79ce80260",
               "InstanceType":"t2.micro",
               "NetworkInterfaces":[
                  {
                     "DeviceIndex":0,
                     "Groups":[
                        {
                           "Fn::ImportValue":"eksctl-capstonecluster-cluster::SharedNodeSecurityGroup"
                        },
                        {
                           "Ref":"SG"
                        }
                     ]
                  }
               ],
               "UserData":"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"
            },
            "LaunchTemplateName":{
               "Fn::Sub":"${AWS::StackName}"
            }
         }
      },
      "NodeInstanceProfile":{
         "Type":"AWS::IAM::InstanceProfile",
         "Properties":{
            "Path":"/",
            "Roles":[
               {
                  "Ref":"NodeInstanceRole"
               }
            ]
         }
      },
      "NodeInstanceRole":{
         "Type":"AWS::IAM::Role",
         "Properties":{
            "AssumeRolePolicyDocument":{
               "Statement":[
                  {
                     "Action":[
                        "sts:AssumeRole"
                     ],
                     "Effect":"Allow",
                     "Principal":{
                        "Service":[
                           {
                              "Fn::FindInMap":[
                                 "ServicePrincipalPartitionMap",
                                 {
                                    "Ref":"AWS::Partition"
                                 },
                                 "EC2"
                              ]
                           }
                        ]
                     }
                  }
               ],
               "Version":"2012-10-17"
            },
            "ManagedPolicyArns":[
               {
                  "Fn::Sub":"arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
               },
               {
                  "Fn::Sub":"arn:${AWS::Partition}:iam::aws:policy/AmazonEKSWorkerNodePolicy"
               },
               {
                  "Fn::Sub":"arn:${AWS::Partition}:iam::aws:policy/AmazonEKS_CNI_Policy"
               }
            ],
            "Path":"/"
         }
      },
      "SG":{
         "Type":"AWS::EC2::SecurityGroup",
         "Properties":{
            "GroupDescription":"Communication between the control plane and worker nodes in group standard-workers",
            "Tags":[
               {
                  "Key":"kubernetes.io/cluster/capstonecluster",
                  "Value":"owned"
               },
               {
                  "Key":"Name",
                  "Value":{
                     "Fn::Sub":"${AWS::StackName}/SG"
                  }
               }
            ],
            "VpcId":{
               "Fn::ImportValue":"eksctl-capstonecluster-cluster::VPC"
            }
         }
      }
   },
   "Outputs":{
      "FeatureLocalSecurityGroup":{
         "Value":true
      },
      "FeaturePrivateNetworking":{
         "Value":false
      },
      "FeatureSharedSecurityGroup":{
         "Value":true
      },
      "InstanceProfileARN":{
         "Export":{
            "Name":{
               "Fn::Sub":"${AWS::StackName}::InstanceProfileARN"
            }
         },
         "Value":{
            "Fn::GetAtt":"NodeInstanceProfile.Arn"
         }
      },
      "InstanceRoleARN":{
         "Export":{
            "Name":{
               "Fn::Sub":"${AWS::StackName}::InstanceRoleARN"
            }
         },
         "Value":{
            "Fn::GetAtt":"NodeInstanceRole.Arn"
         }
      }
   }
}